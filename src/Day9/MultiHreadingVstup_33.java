package Day9;

public class MultiHreadingVstup_33 {
    /**
     * MultiHreading - многопоточность - это возможно процессора выполнять одну ту самию задачу несколькими блоками
     * (Принцип постороения программы, где несколько блоков кода выполняются одновременно)
     *
     * Многопоточность похожа на parralelStream - как например нужно просумировать числа от 1 до 10000
     *
     * То это с одном потоком выполнится как - 1+2+3+4+5...10000
     *
     * Но с многопоточностью задача розделится на блоки и каждый блок будет выполнять свое - 1+2+3+4+5+...2500
     *                                                                                       2501+2502+...5000
     *                                                                                       5001+5002+...7500
     *                                                                                       7501+7502+...1000
     *
     * Основными целями многопоточности является - 1.Производительность( улучшения скорости выполения задачи)
     *                                            2.Concurrency(возможность выполнять несколько задач одновременно)
     *
     * Обычно многопоточность работает так что распределяет задачи на разные ядра процессора и каждое выполняет что-то свое.
     *
     * Но если есть только 1 ядро, то выполения задачи юудет проходит по принципу context switch - 1 ядро будет
     * переключатся между задачами( наприклад нужно выполнить действия деления, умножения, сложения, вычитания)
     *
     * То про принципу context switch ядро сначала будет выполнять умножения потом остановится переключится на деление
     * потом остановится переключится на сложение, остановится вернется обратно к умножению.
     * Эти переключения производятся очень быстро что создается ощущение одновременного выполениния разных задач
     *
     * Многопоточность не выгодна когда программа является небольшой, так как при многопоточности у процессора уходит
     * время на то чтобы запоминать и перключатся, а в одном потоке ничего кроме самого выполнения задачи не происходит.
     */
}
