package MapCollection.HashMap_13_14_15_16_18;

public class HashMap_16 {
    /**
     * y HashMap езе есть аткое понятие как - Initial capacity(начельный размер массива) и LoadFactor(кооефициент какой
     * обозначает, при какой заполнености массива о должен увелтчтьься вдвое). ЕслиЕсл создать большой Initial capacity
     * то мы жертвуем памятю но приобретает лучшую скорость, если создать большой LoadFactor мы жертвуем скоростью но
     * приобретем память.
     *
     * BigONotation в HashMap являеется в лучшем случае O(1), в худшеи O(n).
     *
     * Если мы создает большой массив то мы немного исключаем создание больших линкедлистов.
     * Есл все же мы сделали так что массиве окажется большой линкедлист то по приодолении определнного порога начинают
     * использоваться сбалансированные деревья которые работают по принципе BinarySearch.
     *
     * Очень важно использовать в качестве ключ UnUtble(неизменяемые значения) что-бы при изменении какого-то обьекта хэш
     * код оставался тот самый и чтобы вы могли обьект под этим хэгкодом найти и обратится к немук
     */
}
